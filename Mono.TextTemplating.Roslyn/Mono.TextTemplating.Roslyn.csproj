<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <SignAssembly>true</SignAssembly>
    <AssemblyOriginatorKeyFile>..\TextTemplating.snk</AssemblyOriginatorKeyFile>
    <PackageId>Mono.TextTemplating.Roslyn</PackageId>
    <DefaultNamespace>Mono.TextTemplating</DefaultNamespace>
    <LangVersion>8.0</LangVersion>
    <Description>
      <![CDATA[In-process Roslyn compiler for the Mono.TextTemplating T4 templating engine

This is useful for processes that use a hosted instance of Mono.TextTemplating to compile multiple templates.
Only the first template will be affected by the startup overhead of the compiler, and compilation of subsequent
templates will be much faster.

This can also be used to guarantee a specific version of the C# compiler rather than relying on the system version.

To enable the in-process C# compiler, use the TemplatingEngine.UseInProcessCompiler() extension method.

      ]]>
    </Description>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="3.0.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
  </ItemGroup>


  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.6.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Mono.TextTemplating\Mono.TextTemplating.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="Nerdbank.GitVersioning" Version="3.2.31" />
  </ItemGroup>
</Project>
