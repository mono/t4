name: Build

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # GitVersioning needs deep clone

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
      if: startsWith (matrix.os, 'windows')

    - name: Set up NuGet
      uses: nuget/setup-nuget@v1

    - name: Restore
      run: msbuild Mono.TextTemplating.sln -t:Restore -p:Configuration=Release -m

    - name: Build
      run: msbuild Mono.TextTemplating.sln -p:Configuration=Release -m

    - name: Download NUnit
      run: nuget install NUnit.ConsoleRunner -Version 3.8.0 -OutputDirectory testrunner
      shell: bash

    - name: Test (Windows)
      if: startsWith (matrix.os, 'windows')
      run: testrunner\NUnit.ConsoleRunner.3.8.0\tools\nunit3-console.exe Mono.TextTemplating.Tests\bin\Release\net472\Mono.TextTemplating.Tests.dll

    - name: Test (Linux/Mac)
      if: startsWith (matrix.os, 'windows') == false
      run: mono ./testrunner/NUnit.ConsoleRunner.3.8.0/tools/nunit3-console.exe ./Mono.TextTemplating.Tests/bin/Release/net472/Mono.TextTemplating.Tests.dll

    - uses: actions/upload-artifact@v2
      with:
        name: packages
        path: packages/Release

  publish:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: packages
          name: packages
      - uses: nuget/setup-nuget@v1
      - name: Publish to GPR
        run: |
          nuget source Add -Name "GPR" -Source "https://nuget.pkg.github.com/mono/index.json" -UserName mono -Password ${{ secrets.GITHUB_TOKEN }}
          nuget push packages\**\*.nupkg -Source "GPR" -SkipDuplicate
